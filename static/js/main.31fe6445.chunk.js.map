{"version":3,"sources":["components/layout/Footer/Footer.js","components/layout/JumboTron/JumboTron.js","components/layout/TopBar/TopBar.js","components/Comment/Comment.js","services/post.js","services/comment.js","components/Form/Form.js","components/Post/Post.js","pages/Archives/Archives.js","pages/Home/Home.js","pages/PostPage/PostPage.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","text","path","useLocation","pathname","split","className","to","JumboTron","location","history","useHistory","onClick","goBack","TopBar","type","data-toggle","data-target","aria-expanded","id","Comment","comment","index","src","avatar","alt","name","createdAt","content","BASE_URI","window","includes","findAll","a","fetch","then","response","json","findArchived","findOne","create","data","method","headers","body","archive","Form","postId","onSuccess","useEffect","localStorage","getItem","document","getElementsByName","value","handleSubmit","e","preventDefault","submitCall","createPost","createComment","target","post_id","JSON","stringify","reset","length","setItem","onSubmit","for","placeholder","styles","height","Post","post","isPostView","onRefresh","class","title","archived","data-post-id","data-archived","Comments","Archives","useState","posts","setPosts","getPosts","map","Home","refresh","PostPage","setPost","useParams","getPost","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31fe6445.chunk.js","sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\n\nexport const Footer = () => {\n  const location = useLocation();\n  const trimmedPath = location.pathname.split(\"/\")[1];\n  let text = \"View Archives\";\n  let path = \"/archives\";\n  switch (trimmedPath) {\n    case \"archives\":\n    case \"post\":\n      text = \"Go Home\";\n      path = \"/\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <footer>\n      <div className=\"jumbotron\">\n        <Link className=\"archive\" to={path}>\n          {text}\n        </Link>\n      </div>\n    </footer>\n  );\n};\n","import { Link, useLocation, useHistory } from \"react-router-dom\";\n\nexport const JumboTron = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const trimmedPath = location.pathname.split(\"/\")[1];\n  let text;\n  switch (trimmedPath) {\n    case \"archives\":\n      text = \"Archived Posts\";\n      break;\n    case \"post\":\n      break;\n    default:\n      text = \"Recent Posts\";\n\n      break;\n  }\n\n  if (!text) {\n    return (\n      <div className=\"jumbotron\">\n        <div className=\"container\">\n          <Link onClick={() => history.goBack()}>{\"<-\"} Go Back</Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"jumbotron\">\n      <div className=\"container\">\n        <h3>{text}</h3>\n      </div>\n    </div>\n  );\n};\n","export const TopBar = () => {\n  return (\n    <div className=\"intro-header\">\n      <header className=\"page-header\">\n        <nav className=\"navbar navbar-fixed-top palette-turquoise\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n              <button\n                type=\"button\"\n                className=\"navbar-toggle collapsed\"\n                data-toggle=\"collapse\"\n                data-target=\"#bs-example-navbar-collapse-1\"\n                aria-expanded=\"false\"\n              >\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n              </button>\n              <h5>\n                <i className=\"fui-folder\"></i>The Folders Project\n              </h5>\n            </div>\n\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"bs-example-navbar-collapse-1\"\n            >\n              <h4 className=\"folder-title\">React!</h4>\n            </div>\n          </div>\n        </nav>\n      </header>\n    </div>\n  );\n};\n","export const Comment = ({ comment, index }) => {\n  return (\n    <article className={`post comment${index % 2 === 0 ? \" odd\" : \"\"}`}>\n      <div className=\"post-title\">\n        <img src={comment.avatar} alt=\"avatar\" />\n        <div>\n          <p>\n            <strong>{comment.name}</strong>\n          </p>\n          <p className=\"post-meta\">{comment.createdAt}</p>\n        </div>\n      </div>\n\n      <p className=\"post-content\">{comment.content}</p>\n    </article>\n  );\n};\n","let BASE_URI = window.location.pathname.includes(\"localhost\")\n  ? \"http://localhost:3030\"\n  : \"https://llnl1.herokuapp.com\";\n\nBASE_URI += `/posts`;\n\nexport const findAll = async () => {\n  return fetch(BASE_URI).then((response) => response.json());\n};\n\nexport const findArchived = async () => {\n  return fetch(`${BASE_URI}?archived=true`).then((response) => response.json());\n};\n\nexport const findOne = function (id) {\n  return fetch(`${BASE_URI}/${id}`).then((response) => response.json());\n};\n\nexport const create = (data) => {\n  return fetch(BASE_URI, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: data,\n  });\n};\n\nexport const archive = (id) => {\n  return fetch(`${BASE_URI}/${id}/archive`, { method: \"POST\" });\n};\n\nexport const unarchive = (id, callback) => {\n  return fetch(`${BASE_URI}/${id}/unarchive`, { method: \"POST\" });\n};\n","let BASE_URI = window.location.pathname.includes(\"localhost\")\n  ? \"http://localhost:3030\"\n  : \"https://llnl1.herokuapp.com\";\n\nBASE_URI += `/comments`;\n\nexport const create = (data) => {\n  return fetch(BASE_URI, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: data,\n  });\n};\n","import { create as createPost } from \"../../services/post\";\nimport { create as createComment } from \"../../services/comment\";\nimport { useEffect } from \"react\";\n\nexport const Form = ({ type = \"post\", postId = null, onSuccess }) => {\n  useEffect(() => {\n    if (window.localStorage.getItem(\"name\")) {\n      document.getElementsByName(\"name\")[0].value = window.localStorage.getItem(\n        \"name\"\n      );\n    }\n    if (window.localStorage.getItem(\"avatar\")) {\n      document.getElementsByName(\n        \"avatar\"\n      )[0].value = window.localStorage.getItem(\"avatar\");\n    }\n  }, []);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const submitCall = type === \"post\" ? createPost : createComment;\n\n    const body = {\n      name: e.target[0].value,\n      avatar: e.target[1].value,\n      content: e.target[2].value,\n    };\n\n    if (type !== \"post\") {\n      body.post_id = postId;\n    }\n\n    await submitCall(JSON.stringify(body));\n    onSuccess();\n    e.target.reset();\n\n    if (body.name.length > 0) {\n      window.localStorage.setItem(\"name\", body.name);\n    }\n    if (body.avatar.length > 0) {\n      window.localStorage.setItem(\"avatar\", body.avatar);\n    }\n  };\n\n  return (\n    <form id=\"post-form\" className=\"new-post\" onSubmit={handleSubmit}>\n      <div className=\"details-wrapper\">\n        <div>\n          <label for=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Your name..\" />\n        </div>\n        <div>\n          <label for=\"avatar\">Avatar</label>\n          <input\n            type=\"text\"\n            id=\"avatar\"\n            name=\"avatar\"\n            placeholder=\"Enter a url for an image\"\n          />\n        </div>\n      </div>\n\n      <textarea\n        id=\"content\"\n        name=\"content\"\n        placeholder=\"Share something\"\n        styles={{ height: \"200px\" }}\n      ></textarea>\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport { archive, unarchive } from \"../../services/post\";\n\nexport const Post = ({ post, index = 0, isPostView = false, onRefresh }) => {\n  if (!post.id) {\n    return null;\n  }\n\n  return (\n    <article className={`post ${index % 2 === 0 ? \"\" : \" odd\"}`}>\n      <div className=\"post-title\">\n        <img src={post.avatar} alt=\"avatar\" />\n        <div>\n          <p>\n            <strong>{post.name}</strong>\n            <i\n              class=\"fui-cross\"\n              title={post.archived ? \"unarchive\" : \"archive\"}\n              data-post-id={post.id}\n              data-archived={post.archived}\n              onClick={async () => {\n                (await post.archived)\n                  ? await unarchive(post.id)\n                  : await archive(post.id);\n                onRefresh();\n              }}\n            ></i>\n          </p>\n          <p className=\"post-meta\">{post.createdAt}</p>\n        </div>\n      </div>\n      <p className=\"post-content\"> {post.content}</p>\n      {!isPostView && (\n        <Link to={`/post/${post.id}`}>\n          {post.Comments.length > 0 ? \"Read More\" : \"Be the first to comment\"}\n        </Link>\n      )}\n    </article>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Post } from \"../../components\";\nimport { findArchived } from \"../../services/post\";\n\nexport const Archives = () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      setPosts(await findArchived());\n    };\n\n    getPosts();\n  }, [setPosts]);\n  return (\n    <>\n      <section className=\"posts-container\">\n        {posts.map((post, index) => (\n          <Post key={post.id} post={post} index={index} />\n        ))}\n      </section>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Form, Post } from \"../../components\";\n\nimport { findAll } from \"../../services/post\";\n\nexport const Home = () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      setPosts(await findAll());\n    };\n\n    getPosts();\n  }, [setPosts]);\n\n  const refresh = async () => {\n    setPosts(await findAll());\n  };\n\n  return (\n    <>\n      <section>\n        <h3>Add a new post</h3>\n        <Form onSuccess={refresh} />\n      </section>\n\n      <section className=\"posts-container\">\n        {posts.map((post, index) => (\n          <Post key={post.id} post={post} index={index} />\n        ))}\n      </section>\n    </>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Post, Comment, Form } from \"../../components\";\nimport { findOne } from \"../../services/post\";\n\nexport const PostPage = () => {\n  const [post, setPost] = useState({});\n  const { id } = useParams();\n  useEffect(() => {\n    const getPost = async () => {\n      setPost(await findOne(id));\n    };\n\n    getPost();\n  }, [setPost, id]);\n\n  const refresh = async () => {\n    setPost(await findOne(id));\n  };\n\n  if (!post.id) {\n    return null;\n  }\n\n  return (\n    <>\n      <Post post={post} isPostView />\n\n      {post.Comments &&\n        post.Comments.map((comment, index) => (\n          <Comment comment={comment} index={index} />\n        ))}\n\n      <h3>Add a Comment</h3>\n\n      <Form type=\"comment\" onSuccess={refresh} postId={post.id} />\n    </>\n  );\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Footer, JumboTron, TopBar } from \"./components/layout\";\nimport { Home, Archives, PostPage } from \"./pages\";\n\nfunction App() {\n  return (\n    <Router>\n      <TopBar />\n      <JumboTron />\n      <div className=\"container-fluid full\">\n        <section className=\"content row\">\n          <div className=\"col-md-3\"></div>\n          <main className=\"col-md-6\">\n            <Switch>\n              <Route path=\"/archives\">\n                <Archives />\n              </Route>\n              <Route path=\"/post/:id\">\n                <PostPage />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </main>\n          <div className=\"col-md-3\"></div>\n        </section>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}